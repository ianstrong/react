{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\react\\\\nextjs\\\\pages\\\\_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n// import App from 'next/app'\nfunction MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  console.log(pageProps);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, pageProps.show && __jsx(\"aside\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"Sidebar\"), __jsx(Component, _extends({}, pageProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  })));\n} // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//\n//   return { ...appProps }\n// }\n\n\nexport default MyApp;","map":{"version":3,"sources":["C:/react/nextjs/pages/_app.js"],"names":["MyApp","Component","pageProps","console","log","show"],"mappings":";;;;;AAAA;AAEA,SAASA,KAAT,OAAyC;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;AACvCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,SAAS,CAACG,IAAV,IAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADrB,EAEE,MAAC,SAAD,eAAeH,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CADF;AAMD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeF,KAAf","sourcesContent":["// import App from 'next/app'\r\n\r\nfunction MyApp({ Component, pageProps }) {\r\n  console.log(pageProps);\r\n  return (\r\n    <div>\r\n      {pageProps.show && <aside>Sidebar</aside>}\r\n      <Component {...pageProps} />\r\n    </div>\r\n  );\r\n}\r\n\r\n// Only uncomment this method if you have blocking data requirements for\r\n// every single page in your application. This disables the ability to\r\n// perform automatic static optimization, causing every page in your app to\r\n// be server-side rendered.\r\n//\r\n// MyApp.getInitialProps = async (appContext) => {\r\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\r\n//   const appProps = await App.getInitialProps(appContext);\r\n//\r\n//   return { ...appProps }\r\n// }\r\n\r\nexport default MyApp;\r\n"]},"metadata":{},"sourceType":"module"}